<?php

namespace Troiswa\BackBundle\Repository;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface
{
    public function loadUserByUsername($pseudoOrEmail)
    {
        $user = $this->createQueryBuilder('u')
            ->where('u.pseudo = :pseudoArg OR u.email = :emailArg')
            ->setParameters([
                'pseudoArg' => $pseudoOrEmail,
                'emailArg' => $pseudoOrEmail
            ])
            ->getQuery()
            ->getOneOrNullResult();

        if (!$user)
        {
            $message = "Impossible de se connecter avec l'utilisateur : ". $pseudoOrEmail;
            throw new UsernameNotFoundException($message);
        }

        return $user;
    }

    public function refreshUser(UserInterface $user)
    {
        $class = get_class($user);
        if (!$this->supportsClass($class)) {
            throw new UnsupportedUserException(
                sprintf(
                    'Instances of "%s" are not supported.',
                    $class
                )
            );
        }

        return $this->find($user->getId());
    }

    public function supportsClass($class)
    {
        return $this->getEntityName() === $class
        || is_subclass_of($class, $this->getEntityName());
    }

}
